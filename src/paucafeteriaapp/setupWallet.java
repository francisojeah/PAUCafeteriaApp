/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package paucafeteriaapp;

import static paucafeteriaapp.Register.fn;
import static paucafeteriaapp.Register.ln;
import static paucafeteriaapp.Register.em;
import static paucafeteriaapp.Register.ro;
import static paucafeteriaapp.Register.pa;
import static paucafeteriaapp.Register.rpa;

import static paucafeteriaapp.AdditionalReg.filename;
import static paucafeteriaapp.AdditionalReg.photo;
import static paucafeteriaapp.AdditionalReg.spro;
import static paucafeteriaapp.AdditionalReg.se;
import static paucafeteriaapp.AdditionalReg.ph;
import static paucafeteriaapp.AdditionalReg.db;
import static paucafeteriaapp.AdditionalReg.sq1;
import static paucafeteriaapp.AdditionalReg.sq2;
import static paucafeteriaapp.AdditionalReg.pic;

import java.awt.Color;
import java.awt.Font;
import java.awt.Image;
import java.awt.Toolkit;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.security.MessageDigest;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JPasswordField;
import javax.swing.JTextField;


/**
 *
 * @author ojeah
 */
public class setupWallet extends javax.swing.JFrame {
    
    public static String wpa="";
    public static String wrpa="";
    

    /**
     * Creates new form setupWallet
     */
    public setupWallet() {
        initComponents();
        addPasswordPlaceHolder(jPasswordField1);
        addPasswordPlaceHolder(jPasswordField2);
        if(wpa.equals("")){
                    
        }else{
            jPasswordField1.setText(wpa);
            removePasswordPlaceHolder(jPasswordField1);

            jPasswordField1.setEchoChar('*');
        }
        if(wrpa.equals("")){

        }else{
            jPasswordField2.setText(wrpa);
            removePasswordPlaceHolder(jPasswordField2);
            jPasswordField2.setEchoChar('*');
        }
    }
    
    
    public void addPlaceHolder(JTextField jTextField){
        Font font = jTextField.getFont();
        font.deriveFont(Font.ITALIC);
        jTextField.setFont(font);
        jTextField.setForeground(Color.gray);
    }
    
    public void removePlaceHolder(JTextField jTextField){
        Font font = jTextField.getFont();
        font.deriveFont(Font.BOLD);
        jTextField.setFont(font);
        jTextField.setForeground(Color.black);
    }
    
    public void addPasswordPlaceHolder(JPasswordField jPasswordField){
        Font font = jPasswordField.getFont();
        font.deriveFont(Font.ITALIC);
        jPasswordField.setFont(font);
        jPasswordField.setForeground(Color.gray);
    }
    
    public void removePasswordPlaceHolder(JPasswordField jPasswordField){
        Font font = jPasswordField.getFont();
        font.deriveFont(Font.PLAIN);
        jPasswordField.setFont(font);
        jPasswordField.setForeground(Color.black);
    }
    
    public String Hash(String c){
        try {
            
            MessageDigest msgDigest= MessageDigest.getInstance("MD5");
            msgDigest.update((new String(c)).getBytes("UTF8"));
            String passEncrypt=new String(msgDigest.digest());
            //JOptionPane.showMessageDialog(this, passEncrypt, "Successfull", JOptionPane.OK_OPTION);
            return passEncrypt;

              
        } catch (Exception ex) {
              return c;
           }
      
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jPasswordField1 = new javax.swing.JPasswordField();
        jPasswordField2 = new javax.swing.JPasswordField();
        jCheckBox1 = new javax.swing.JCheckBox();
        jButton2 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jCheckBox2 = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setText("Setup E-Wallet");

        jLabel2.setText("Wallet Password");

        jLabel3.setText("Re-type Wallet Password");

        jPasswordField1.setText("Password");
        jPasswordField1.setEchoChar('\u0000');
        jPasswordField1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jPasswordField1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jPasswordField1FocusLost(evt);
            }
        });

        jPasswordField2.setText("Re-type Password");
        jPasswordField2.setEchoChar('\u0000');
        jPasswordField2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jPasswordField2FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jPasswordField2FocusLost(evt);
            }
        });

        jCheckBox1.setText("Use Previously set Security Question");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        jButton2.setText("Finish Account Setup");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton4.setText("Back");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jCheckBox2.setText("Show Password");
        jCheckBox2.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox2ItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(115, 115, 115)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                            .addGap(68, 68, 68)
                            .addComponent(jButton4)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 81, Short.MAX_VALUE)
                            .addComponent(jButton2))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(17, 17, 17)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jCheckBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jPasswordField2, javax.swing.GroupLayout.DEFAULT_SIZE, 199, Short.MAX_VALUE)
                                    .addComponent(jPasswordField1)))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(88, 88, 88)
                        .addComponent(jCheckBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(37, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jLabel1)
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jPasswordField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jPasswordField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jCheckBox2)
                .addGap(8, 8, 8)
                .addComponent(jCheckBox1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton4))
                .addContainerGap(32, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void jPasswordField1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jPasswordField1FocusGained
        if(jPasswordField1.getText().equals("Password")){
            jPasswordField1.setText(null);
            jPasswordField1.requestFocus();
            removePasswordPlaceHolder(jPasswordField1);
            jPasswordField1.setEchoChar('*');
        }
    }//GEN-LAST:event_jPasswordField1FocusGained

    private void jPasswordField2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jPasswordField2FocusGained
        if(jPasswordField2.getText().equals("Re-type Password")){
            jPasswordField2.setText(null);
            jPasswordField2.requestFocus();
            removePasswordPlaceHolder(jPasswordField2);
            jPasswordField2.setEchoChar('*');
        }
    }//GEN-LAST:event_jPasswordField2FocusGained

    private void jPasswordField1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jPasswordField1FocusLost
        if(jPasswordField1.getText().equals("")){
            jPasswordField1.setText("Password");
            addPasswordPlaceHolder(jPasswordField1);
            jPasswordField1.setEchoChar((char)0);
        }
    }//GEN-LAST:event_jPasswordField1FocusLost

    private void jPasswordField2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jPasswordField2FocusLost
        if(jPasswordField2.getText().equals("")){
            jPasswordField2.setText("Password");
            addPasswordPlaceHolder(jPasswordField2);
            jPasswordField2.setEchoChar((char)0);
        }
    }//GEN-LAST:event_jPasswordField2FocusLost

    private void jCheckBox2ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox2ItemStateChanged
        if(jCheckBox2.isSelected()){
            jPasswordField1.setEchoChar((char)0);
            jPasswordField2.setEchoChar((char)0);
        }else{
            jPasswordField1.setEchoChar('*');
            jPasswordField2.setEchoChar('*');
        }
    }//GEN-LAST:event_jCheckBox2ItemStateChanged

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        try{
            if((jPasswordField1.getText().equals("Password"))
                    ||(jPasswordField2.getText().equals("Re-type Password"))){
                JOptionPane.showMessageDialog(rootPane, "Please enter missing Fields");
            }else{
                wpa = jPasswordField1.getText();
                wrpa = jPasswordField2.getText();
                if(wpa.equals(wrpa)){
                    AdditionalReg areg = new AdditionalReg();
                    areg.show();
                    dispose();
                } else {

                JOptionPane.showMessageDialog(rootPane, "Password Mismatch");
            }

            }
        }catch(Exception e){
            System.out.println(e);
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try {
            
            String firstname = fn;
            String lastname = ln;
            String email = em;
            String role =  ro;            
            String pass = pa;
            String pass2 = rpa;
            String enpass= Hash(pass);
            
            String srole = spro;
            String sex = se;
            String phone = ph;
            SimpleDateFormat dat = new SimpleDateFormat("yyyy-MM-dd");
            String date = dat.format(db);
            String sequest1 = sq1;
            String sequest2 = sq2;
            String pics = pic;
            
            wpa = jPasswordField1.getText();
            wrpa = jPasswordField2.getText();
            String wenpass= Hash(wpa);
            
            filename = pics;
            String path = pics;
            Image im = Toolkit.getDefaultToolkit().createImage(path);
            ImageIcon ic = new ImageIcon(im);
            File image = new File(filename);
            FileInputStream fis = new FileInputStream(image);
            ByteArrayOutputStream baos = new ByteArrayOutputStream();
            byte[] Byte = new byte[1024];

            for (int i; (i = fis.read(Byte)) != -1;) {
                baos.write(Byte, 0, i);
            }
            photo = baos.toByteArray();
            
            
            if(!(jCheckBox1.isSelected())){
            JOptionPane.showMessageDialog(null, "Select Security question confirmation", "Error", JOptionPane.ERROR_MESSAGE);
       
            }
            else{
                if ((pass.equals(pass2))&&(wpa.equals(wrpa))){
                    Class.forName("com.mysql.cj.jdbc.Driver");
                    Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/cafeapp", "root", "root");
                    PreparedStatement ps ;
                    ps = con.prepareStatement("insert into registration values(?,?,?,?,?,?,?,?,?,?,?)");
                    
                    ps.setString(1, firstname);
                    ps.setString(2, lastname);
                    ps.setString(3, email);
                    ps.setString(4, role);
                    ps.setString(5, srole);
                    ps.setString(6, sex);
                    ps.setString(7, phone);
                    ps.setString(8, date);
                    ps.setString(9, sequest1);
                    ps.setString(10, sequest2);
                    ps.setBytes(11, photo);
                    
                    int rs;
                    rs = ps.executeUpdate();
                    
                    ps = con.prepareStatement("insert into login values(?,?,?)");
                    ps.setString(1, email);
                    ps.setString(2, enpass);
                    ps.setString(3, role);
                    rs = ps.executeUpdate();
                    
                    ps = con.prepareStatement("insert into wallet values(?,?,?)");
                    ps.setString(1, email);
                    ps.setString(2, wenpass);
                    ps.setInt(3, 0);
                    rs = ps.executeUpdate();
                
                
                    JOptionPane.showMessageDialog(rootPane, firstname + "'s Account Created");
                    con.close();

                    LandingPage lp = new LandingPage();
                    lp.show();
                    dispose();
              
                
                }
                else{
                 JOptionPane.showMessageDialog(rootPane, "Password Mismatch");
                }
            }
        }catch (Exception e){
            System.out.println(e);
     }      
        
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(setupWallet.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(setupWallet.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(setupWallet.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(setupWallet.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new setupWallet().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton4;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JPasswordField jPasswordField2;
    // End of variables declaration//GEN-END:variables
}
